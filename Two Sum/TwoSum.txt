public int[] twoSum (int[] nums, int target) {

        int length = nums.length;
        int fnum, snum;
        int[] output = new int[2];

        for (int i = 0; i < length; i++) {
            fnum = nums[i];
            for (int j = 0; j < i; j++) {
                snum = nums[j];
                if ((fnum + snum) == target) {
                    output = new int []{j, i};
                }
            }
        }

        return output;
    }

Brutual force is applied in my first attempt but since the outside for loop takes O(n) time complexity,
the inside for loop will lead to the 0(n2) time complexity. The advantage of applying Hashmap
is that the time complexity can always reduced to O(n).